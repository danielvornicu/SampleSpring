
package tech.dev.web.jaxws.seitest;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "TestWebService", targetNamespace = "http://jaxws.test.com/", wsdlLocation = "http://localhost:1111/crm/jaxws/TestWebService?wsdl")
public class TestWebService
    extends Service
{

    private final static URL TESTWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException TESTWEBSERVICE_EXCEPTION;
    private final static QName TESTWEBSERVICE_QNAME = new QName("http://jaxws.test.com/", "TestWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:1111/crm/jaxws/TestWebService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TESTWEBSERVICE_WSDL_LOCATION = url;
        TESTWEBSERVICE_EXCEPTION = e;
    }

    public TestWebService() {
        super(__getWsdlLocation(), TESTWEBSERVICE_QNAME);
    }

    public TestWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), TESTWEBSERVICE_QNAME, features);
    }

    public TestWebService(URL wsdlLocation) {
        super(wsdlLocation, TESTWEBSERVICE_QNAME);
    }

    public TestWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TESTWEBSERVICE_QNAME, features);
    }

    public TestWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TestWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns TestWebServ
     */
    @WebEndpoint(name = "TestWebServicePort")
    public TestWebServ getTestWebServicePort() {
        return super.getPort(new QName("http://jaxws.test.com/", "TestWebServicePort"), TestWebServ.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TestWebServ
     */
    @WebEndpoint(name = "TestWebServicePort")
    public TestWebServ getTestWebServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://jaxws.test.com/", "TestWebServicePort"), TestWebServ.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TESTWEBSERVICE_EXCEPTION!= null) {
            throw TESTWEBSERVICE_EXCEPTION;
        }
        return TESTWEBSERVICE_WSDL_LOCATION;
    }

}
